{"version":3,"sources":["../../../jsx/todo_componets/todoList.js"],"names":["dom","Fragment","Todo","Loading","initState","i18n","translations","TodoList","props","ReachedMax","page","pageSize","loading","state","statuses","map","x","width","todos","filter","t","status","ft","toString","length","actions","More"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,kBAA9B;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,SAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,MAAMC,IAAI,GAAGD,SAAS,CAACE,YAAV,EAAb,C,CACA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAI;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA;AAA9B,MAA0CR,SAAS,CAACS,KAAxD;AACA,SACE,sBACE;AAAK,IAAA,KAAK,EAAC;AAAX,KAGIT,SAAS,CAACU,QAAV,CAAmBC,GAAnB,CAAwBC,CAAD,IAAO;AAC5B,WAAO;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAZ,OACL,gBAAKD,CAAL,CADK,EAEJR,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaL,CAAvC,EAA0CD,GAA1C,CAA+CO,EAAD,IAAQ;AACrD,aAAO,IAAC,IAAD,eAAUA,EAAV,EAAkBd,KAAlB,EAAP;AACD,KAFA,CAFI,CAAP;AAQD,GATD,CAHJ,CADF,EAkBE,iBACE,eADF,EAEE,0BAAWC,UAAU,CAACc,QAAX,EAAX,gBAA4Cb,IAA5C,mBAA+DC,QAA/D,gBAAmFH,KAAK,CAACU,KAAN,CAAYM,MAA/F,CAFF,EAIGZ,OAAO,IAAI,kCAAkB,IAAC,OAAD,OAAlB,MAJd,EAKE,eALF,EAOIR,SAAS,CAACS,KAAV,CAAgBJ,UAAhB,GACE;AACE,IAAA,QAAQ,EAAEL,SAAS,CAACK,UADtB;AAEE,IAAA,OAAO,EAAEL,SAAS,CAACqB,OAAV,CAAkBC;AAF7B,KAEoCrB,IAAI,CAAC,SAAD,CAFxC,CADF,GAKE;AACE,IAAA,OAAO,EAAED,SAAS,CAACqB,OAAV,CAAkBC;AAD7B,KACoCrB,IAAI,CAAC,SAAD,CADxC,CAZN,CAlBF,CADF;AAsCD,CAxCD;;AA0CA,eAAeE,QAAf","sourcesContent":["import { dom, Fragment } from \"../mact/index.js\";\r\n\r\nimport { Todo, Loading } from \"./index\";\r\nimport initState from \"./initialstate.js\";\r\nconst i18n = initState.translations();\r\n// TodoList Component\r\nconst TodoList = (props) => {\r\n  let { ReachedMax, page, pageSize, loading } = initState.state;\r\n  return (\r\n    <>\r\n      <div class=\"parent\">\r\n\r\n        {\r\n          initState.statuses.map((x) => {\r\n            return <div style={{ width: '100%' }}>\r\n              <h4>{x}</h4>\r\n              {props.todos.filter((t) => t.status === x).map((ft) => {\r\n                return <Todo {...ft} {...props} />;\r\n              })}\r\n\r\n            </div>\r\n\r\n          })\r\n        }\r\n\r\n\r\n      </div>\r\n      <div>\r\n        <br />\r\n        <p>Done : {ReachedMax.toString()} PageNo : {page} , PageSize: {pageSize} Records: {props.todos.length}</p>\r\n\r\n        {loading && <div>Loading..... <Loading /> </div>}\r\n        <br />\r\n        {\r\n          initState.state.ReachedMax ?\r\n            <button\r\n              disabled={initState.ReachedMax}\r\n              onClick={initState.actions.More}>{i18n(\"moreBtn\")}</button>\r\n            :\r\n            <button\r\n              onClick={initState.actions.More}>{i18n(\"moreBtn\")}</button>\r\n\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"file":"todoList.js"}