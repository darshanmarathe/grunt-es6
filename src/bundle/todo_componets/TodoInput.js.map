{"version":3,"sources":["../../../jsx/todo_componets/TodoInput.js"],"names":["dom","Fragment","moment","initState","parsestring","str","date","Date","toLowerCase","indexOf","add","toDate","dueDate","match","toString","isNaN","parseInt","TodoInput","props","width","e","value","target","actions","HandleAdd","placeholder"],"mappings":"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","sourcesContent":["import { dom, Fragment } from \"../mact/index.js\";\r\n\r\nimport moment from \"moment\";\r\nimport { initState } from \"./index\";\r\n// TodoInput Component\r\n\r\nfunction parsestring(str) {\r\n    var date = new Date();\r\n    if (str.toLowerCase().indexOf(\"tomorrow\") > -1) {\r\n        date = moment().add(1, \"days\").toDate();\r\n    }\r\n    if (str.toLowerCase().indexOf(\"next week\") > -1) {\r\n        date = moment().add(1, \"week\").toDate();\r\n    }\r\n    if (str.toLowerCase().indexOf(\"next month\") > -1) {\r\n        date = moment().add(1, \"month\").toDate();\r\n    }\r\n    if (str.toLowerCase().indexOf(\"next year\") > -1) {\r\n        date = moment().add(1, \"year\").toDate();\r\n    }\r\n    {\r\n        var dueDate = str.match(/\\b(?:(?:Mon)|(?:Tues?)|(?:Wed(?:nes)?)|(?:Thur?s?)|(?:Fri)|(?:Sat(?:ur)?)|(?:Sun))(?:day)?\\b[:\\-,]?\\s*(?:(?:jan|feb)?r?(?:uary)?|mar(?:ch)?|apr(?:il)?|may|june?|july?|aug(?:ust)?|oct(?:ober)?|(?:sept?|nov|dec)(?:ember)?)\\s+\\d{1,2}\\s*,?\\s*\\d{4}/i);\r\n        if (dueDate != null) {\r\n            date = new Date(dueDate.toString());\r\n        }\r\n    }\r\n    {\r\n        var dueDate = str.match(/\\w+(?=\\s+days)/);\r\n        if (dueDate != null && !isNaN(dueDate.toString())) {\r\n            date = moment().add(parseInt(dueDate.toString()), \"day\").toDate();\r\n        }\r\n    }\r\n    {\r\n        var dueDate = str.match(/\\w+(?=\\s+weeks)/);\r\n        if (dueDate != null && !isNaN(dueDate.toString())) {\r\n            date = moment().add(parseInt(dueDate.toString()), \"week\").toDate();\r\n        }\r\n    }\r\n    {\r\n        var dueDate = str.match(/\\w+(?=\\s+months)/);\r\n        if (dueDate != null && !isNaN(parseInt(dueDate.toString()))) {\r\n            date = moment().add(parseInt(dueDate.toString()), \"month\").toDate();\r\n        }\r\n    }\r\n  return {\r\n    str,\r\n    date\r\n    }\r\n}\r\nconst TodoInput = (props) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      style={{ width: \"100%\" }}\r\n      onChange={(e) => {\r\n        let { value } = e.target;\r\n\r\n        initState.actions.HandleAdd(parsestring(value))\r\n      }}\r\n      placeholder={props.placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n "],"file":"TodoInput.js"}