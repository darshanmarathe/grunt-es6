{"version":3,"sources":["../../../jsx/todo_componets/todo.js"],"names":["dom","Fragment","initState","Todo","props","renderTodo","todo","title","Delete_Click","e","confirm","actions","HandleDelete","Done_Click","console","log","HandleDone","done","id","desc","$","slideToggle","display"],"mappings":"AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,kBAA9B;AAEA,SAASC,SAAT,QAA0B,SAA1B,C,CACA;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,WAASC,UAAT,GAAsB;AACpB,QAAIC,IAAI,GAAGF,KAAK,CAACG,KAAN,IAAe,IAAf,GAAsB,WAAtB,GAAoCH,KAAK,CAACG,KAArD;AACA,WAAOD,IAAP;AACD;;AAED,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAIC,OAAO,CAAC,qCAAD,CAAX,EAAoD;AAClDR,MAAAA,SAAS,CAACS,OAAV,CAAkBC,YAAlB,CAA+BH,CAA/B;AACD;AACF;;AAED,WAASI,UAAT,CAAoBP,IAApB,EAA0B;AACxBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBT,IAApB;AACAJ,IAAAA,SAAS,CAACS,OAAV,CAAkBK,UAAlB,CAA6BV,IAA7B;AACD;;AAED,SACE,gBACGF,KAAK,CAACa,IAAN,KAAe,IAAf,GAAsB,sBAAOZ,UAAU,EAAjB,MAAtB,GAAoDA,UAAU,EADjE,EAEE;AACE,IAAA,OAAO,EAAGI,CAAD,IAAO;AACdD,MAAAA,YAAY,CAACJ,KAAK,CAACc,EAAP,CAAZ;AACD;AAHH,SAFF,EASE;AACE,IAAA,OAAO,EAAGT,CAAD,IAAO;AACdI,MAAAA,UAAU,CAACT,KAAD,CAAV;AACD;AAHH,KAKGA,KAAK,CAACa,IAAN,IAAc,IAAd,GAAqB,QAArB,GAAgC,MALnC,CATF,EAgBGb,KAAK,CAACe,IAAN,IACC;AACE,IAAA,OAAO,EAAGV,CAAD,IAAO;AACdW,MAAAA,CAAC,CAAC,MAAMhB,KAAK,CAACc,EAAZ,GAAiB,KAAlB,CAAD,CAA0BG,WAA1B;AACD;AAHH,WAjBJ,EAyBE,eAzBF,EA0BGjB,KAAK,CAACe,IAAN,IACC;AAAK,IAAA,EAAE,EAAEf,KAAK,CAACc,EAAN,GAAW,KAApB;AAA2B,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAE;AAAX;AAAlC,KACGlB,KAAK,CAACe,IADT,CA3BJ,CADF;AAkCD,CAnDD;;AAqDA,eAAehB,IAAf","sourcesContent":["import { dom, Fragment } from \"../mact/index.js\";\r\n\r\nimport { initState } from \"./index\";\r\n// Todo Component\r\nconst Todo = (props) => {\r\n  function renderTodo() {\r\n    let todo = props.title == null ? \"Junk data\" : props.title;\r\n    return todo;\r\n  }\r\n\r\n  function Delete_Click(e) {\r\n    if (confirm(\"Do you want to delete this record ?\")) {\r\n      initState.actions.HandleDelete(e);\r\n    }\r\n  }\r\n\r\n  function Done_Click(todo) {\r\n    console.log(\"todo\", todo);\r\n    initState.actions.HandleDone(todo);\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {props.done === true ? <del> {renderTodo()} </del> : renderTodo()}\r\n      <button\r\n        onClick={(e) => {\r\n          Delete_Click(props.id);\r\n        }}\r\n      >\r\n        X\r\n      </button>\r\n      <button\r\n        onClick={(e) => {\r\n          Done_Click(props);\r\n        }}\r\n      >\r\n        {props.done == true ? \"undone\" : \"done\"}\r\n      </button>\r\n      {props.desc && (\r\n        <button\r\n          onClick={(e) => {\r\n            $(\"#\" + props.id + \"div\").slideToggle();\r\n          }}\r\n        >\r\n          ...\r\n        </button>\r\n      )}\r\n      <br />\r\n      {props.desc && (\r\n        <div id={props.id + \"div\"} style={{ display: \"none\" }}>\r\n          {props.desc}\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"file":"todo.js"}