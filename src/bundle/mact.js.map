{"version":3,"sources":["../../jsx/mact.js"],"names":["createElement","tag","props","children","element","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","setAttribute","toString","child","appendChild","parent","Array","isArray","nestedChild","nodeType","createTextNode","createFragment"],"mappings":"AAAA;;AACA;AAEA,MAAMA,aAAa,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAa,GAAGC,QAAhB,KAA6B;AACjD,MAAI,OAAOF,GAAP,KAAe,UAAnB,EAA+B,OAAOA,GAAG,CAACC,KAAD,EAAQ,GAAGC,QAAX,CAAV;AAC/B,QAAMC,OAAO,GAAGC,QAAQ,CAACL,aAAT,CAAuBC,GAAvB,CAAhB;AAEAK,EAAAA,MAAM,CAACC,OAAP,CAAeL,KAAK,IAAI,EAAxB,EAA4BM,OAA5B,CAAoC,CAAC,CAACC,IAAD,EAAOC,KAAP,CAAD,KAAmB;AACrD,QAAID,IAAI,CAACE,UAAL,CAAgB,IAAhB,KAAyBF,IAAI,CAACG,WAAL,MAAsBC,MAAnD,EACAT,OAAO,CAACU,gBAAR,CAAyBL,IAAI,CAACG,WAAL,GAAmBG,MAAnB,CAA0B,CAA1B,CAAzB,EAAuDL,KAAvD,EADA,KAEKN,OAAO,CAACY,YAAR,CAAqBP,IAArB,EAA2BC,KAAK,CAACO,QAAN,EAA3B;AACN,GAJD;AAMAd,EAAAA,QAAQ,CAACK,OAAT,CAAkBU,KAAD,IAAW;AAC1BC,IAAAA,WAAW,CAACf,OAAD,EAAUc,KAAV,CAAX;AACD,GAFD;AAIA,SAAOd,OAAP;AACD,CAfD;;AAiBA,MAAMe,WAAW,GAAG,CAACC,MAAD,EAASF,KAAT,KAAmB;AACrC,MAAIG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAJ,EACAA,KAAK,CAACV,OAAN,CAAee,WAAD,IAAiBJ,WAAW,CAACC,MAAD,EAASG,WAAT,CAA1C,EADA,KAGAH,MAAM,CAACD,WAAP,CAAmBD,KAAK,CAACM,QAAN,GAAiBN,KAAjB,GAAyBb,QAAQ,CAACoB,cAAT,CAAwBP,KAAxB,CAA5C;AACD,CALD;;AAOA,MAAMQ,cAAc,GAAG,CAACxB,KAAD,EAAQ,GAAGC,QAAX,KAAwB;AAC7C,SAAOA,QAAP;AACD,CAFD;;AAIA,SACEH,aADF,EAEE0B,cAFF","sourcesContent":["/** @jsx createElement */\r\n/*** @jsxFrag createFragment */\r\n\r\nconst createElement = (tag, props, ...children) => {\r\n  if (typeof tag === \"function\") return tag(props, ...children);\r\n  const element = document.createElement(tag);\r\n  \r\n  Object.entries(props || {}).forEach(([name, value]) => {\r\n    if (name.startsWith(\"on\") && name.toLowerCase() in window)\r\n    element.addEventListener(name.toLowerCase().substr(2), value);\r\n    else element.setAttribute(name, value.toString());\r\n  });\r\n  \r\n  children.forEach((child) => {\r\n    appendChild(element, child);\r\n  });\r\n  \r\n  return element;\r\n};\r\n\r\nconst appendChild = (parent, child) => {\r\n  if (Array.isArray(child))\r\n  child.forEach((nestedChild) => appendChild(parent, nestedChild));\r\n  else\r\n  parent.appendChild(child.nodeType ? child : document.createTextNode(child));\r\n};\r\n\r\nconst createFragment = (props, ...children) => {\r\n  return children;\r\n};\r\n\r\nexport {\r\n  createElement,\r\n  createFragment\r\n}"],"file":"mact.js"}